name: release
on:
  push:
    tags:
      - "v*" # triggers only if push new tag version, like `0.8.4` or else

# Declare default deny permissions
permissions: {}

jobs:
  # Our 1st JOB to build the binary and create SBOM and checksum and export 
  # output that includes the binary and SBOM hashes so we can produce SLSA
  # provenance for both
  build-goreleaser:
    runs-on: ubuntu-latest
    permissions:
      contents: write # To upload release assets.

    outputs:
      hashes: ${{ steps.subjects.outputs.hashes }}

    steps:
      - id: checkout
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # tag=v2.3.4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v4.0.0
        with:
          go-version: "1.22"
          check-latest: true

      - name: Run GoReleaser
        id: run-goreleaser
        uses: goreleaser/goreleaser-action@b953231f81b8dfd023c58e0854a721e35037f28b # tag=v3
        with:
          version: "~> v1"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Generate subjects
        id: subjects
        # here we pick the artifacts that go releaser produced
        # according to what we configured in .goreleaser.yaml
        # this is essentially contents of artifacts.json
        env:
          ARTIFACTS: "${{ steps.run-goreleaser.outputs.artifacts }}"
        # and below we extract artifacts and corresponding digests from artifacts.josn created by the goreleaser
        # echo "hashes=$hashes" >> $GITHUB_OUTPUT will make the hashes available as subjects.outputs.hashes inside this job
        # and as build-goreleaser.outputs.hashed outside the job
        # 
        # one other option is to just use checksum.txt that I create as part of my 
        # goreleaser configuration .goreleaser.yaml
          # checksum:
          #   name_template: 'checksums.txt'
          #   algorithm: sha256
        run: |
          set -euo pipefail

          hashes=$(echo $ARTIFACTS | jq --raw-output '.[] | {name, "digest": (.extra.Digest // .extra.Checksum)} | select(.digest) | {digest} + {name} | join("  ") | sub("^sha256:";"")' | base64 -w0)
          if test "$hashes" = ""; then # goreleaser < v1.13.0
            checksum_file=$(echo "$ARTIFACTS" | jq -r '.[] | select (.type=="Checksum") | .path')
            hashes=$(cat $checksum_file | base64 -w0)
          fi
          echo "hashes=$hashes" >> $GITHUB_OUTPUT
  # this is our 2nd JOB
  # take artifacts ie. binary and SBOM and create provenance for them 
  provenance:
    needs: [build-goreleaser]
    permissions:
      actions: read # To read the workflow path.
      id-token: write # To sign the provenance.
      contents: write # To add assets to a release.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0
    with:
      base64-subjects: "${{ needs.build-goreleaser.outputs.hashes }}"
      upload-assets: true # upload to a new release
